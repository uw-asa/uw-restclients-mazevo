# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

env:
  APP_NAME: uw_mazevo
  COVERAGE_PYTHON_VERSION: '3.10'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      # Gives the action the necessary permissions for publishing new
      # comments in pull requests.
      pull-requests: write
      # Gives the action the necessary permissions for pushing data to the
      # python-coverage-comment-action branch, and for editing existing
      # comments (to avoid publishing multiple comments in the same PR)
      contents: write
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 coverage nose2
        pip install -e .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The default for black is 88 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    - name: Test with pytest
      run: |
        python -m compileall ${APP_NAME}/
        python -Wd -m coverage run ${APP_NAME}/test.py -v
    - name: Python Coverage Comment
      if: matrix.python-version == env.COVERAGE_PYTHON_VERSION
      uses: py-cov-action/python-coverage-comment-action@v3.23
      with:
        GITHUB_TOKEN: ${{ github.token }}
